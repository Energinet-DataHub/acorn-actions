ARG SDK_VERSION
ARG RUNTIME_VERSION

# Build stage (Chiseled SDK)
FROM mcr.microsoft.com/dotnet/sdk:${SDK_VERSION}-noble-chiseled AS build
ARG PROJECT
ARG MIGRATIONS
WORKDIR /src/

# Enable caching for NuGet packages and dotnet tools
RUN --mount=type=cache,target=/src/packages \
    --mount=type=cache,target=/root/.dotnet/tools \
    dotnet tool restore || true

COPY . .

# Modify Assembly Name if needed
RUN <<EOR
grep -q "<AssemblyName>" ${PROJECT}
if [ $? -eq 0 ]; then
    sed -i ${PROJECT} -e "s|<AssemblyName>.*</AssemblyName>|<AssemblyName>main</AssemblyName>|"
else
    sed -i ${PROJECT} -e "s|</PropertyGroup>|<AssemblyName>main</AssemblyName></PropertyGroup>|"
fi
EOR

# Restore dependencies using cache
RUN --mount=type=cache,target=/src/packages \
    dotnet restore ${PROJECT} --packages /src/packages

# Build & Publish using cache
RUN --mount=type=cache,target=/src/packages \
    --mount=type=cache,target=/root/.dotnet/tools \
    dotnet publish ${PROJECT} -c Release -o /app/publish

WORKDIR /app/publish
RUN rm -f appsettings.json appsettings.*.json || true

# Copy migrations if they exist
RUN <<EOR
mkdir /app/migrations
if [ ! -z ${MIGRATIONS} ]; then
    cp -v /src/${MIGRATIONS} /app/migrations
fi
EOR

# Final runtime image (Chiseled runtime)
FROM mcr.microsoft.com/dotnet/aspnet:${RUNTIME_VERSION}-noble-chiseled-extra AS final
WORKDIR /app
COPY --from=build /app/publish .
COPY --from=build /app/migrations /migrations/

EXPOSE 8080
EXPOSE 8081
ENTRYPOINT ["/app/main"]
