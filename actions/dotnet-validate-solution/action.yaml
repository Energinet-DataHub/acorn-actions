name: Dotnet Validate

description: Lints and tests a domain.

inputs:
  path:
    description: The path of the parent folder of the solution.
    required: true

  dotnet-version:
    description: The version of dotnet to use
    required: true

  pin-version:
    description: Pin dotnet version
    default: "false"
    required: false

runs:
  using: composite

  steps:
    - name: Setup dotnet
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ inputs.dotnet-version }}

    - name: Cache NuGet packages
      uses: actions/cache@v4
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
        restore-keys: |
          ${{ runner.os }}-nuget-

    - name: Pin version
      working-directory: ${{ inputs.path }}
      shell: bash
      if: ${{ inputs.pin-version == 'true' }}
      run: printf '{"sdk":{"rollForward":"disable","version":"%s"}}' "${{ inputs.dotnet-version }}" > global.json

    - name: Print dotnet version
      working-directory: ${{ inputs.path }}
      shell: bash
      run: dotnet --version

    - name: Print dotnet information
      working-directory: ${{ inputs.path }}
      shell: bash
      run: dotnet --info

    - name: Restore
      working-directory: ${{ inputs.path }}
      shell: bash
      env:
        version: ""
      run: |
        dotnet tool restore || true
        dotnet restore

    - name: Lint
      working-directory: ${{ inputs.path }}
      shell: bash
      env:
        version: ""
      run: dotnet format --verify-no-changes -v diag

    - name: Test
      id: test
      working-directory: ${{ inputs.path }}
      shell: bash
      env:
        DOTNET_SYSTEM_CONSOLE_ALLOW_ANSI_COLOR_REDIRECTION: "true"
        DOTNET_CONSOLE_ANSI_COLOR_ENABLED: "true"
        version: ""
      run: |
        set +e
        OUTPUT=$(dotnet test --no-restore -warnaserror --logger:"console;verbosity=normal" 2>&1)
        EXIT_CODE=$?
        echo "$OUTPUT"

        WARNINGS=$(echo "$OUTPUT" | grep "warning PO1001:" || true)
        if [ ! -z "$WARNINGS" ]; then
          echo "## ⚠️ Prerelease or Unstable Package Warnings ⚠️" >> $GITHUB_STEP_SUMMARY
          echo "```" >> $GITHUB_STEP_SUMMARY
          echo "$WARNINGS" >> $GITHUB_STEP_SUMMARY
          echo "```" >> $GITHUB_STEP_SUMMARY
        fi

        exit $EXIT_CODE
